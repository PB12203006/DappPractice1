{"version":3,"sources":["logo.svg","web3.js","lottery.js","App.js","reportWebVitals.js","index.js"],"names":["window","ethereum","request","method","web3","Web3","eth","Contract","inputs","name","outputs","stateMutability","type","internalType","App","useState","manager","setManager","players","setPlayers","balance","setBalance","toBeDeposited","setToBeDeposited","account","setAccount","getData","a","lottery","methods","call","getPlayers","getBalance","options","address","getAccounts","useEffect","deposit","enter","send","from","value","utils","toWei","alert","pickWinner","className","src","logo","alt","length","fromWei","placeholder","onChange","event","target","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d151c51d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import Web3 from \"web3\";\n\nwindow.ethereum.request({ method: \"eth_requestAccounts\" });\n\nconst web3 = new Web3(window.ethereum);\n\nexport default web3;\n","import web3 from \"./web3\";\n\nconst address = \"0xE2FE9042894faE8553F46A0c5C6C4D84F97b51BB\";\n\nconst abi = [\n  {\n    inputs: [],\n    name: \"enter\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"pickWinner\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n  {\n    inputs: [],\n    name: \"getPlayers\",\n    outputs: [\n      {\n        internalType: \"address payable[]\",\n        name: \"\",\n        type: \"address[]\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"manager\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"players\",\n    outputs: [\n      {\n        internalType: \"address payable\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n];\n\nexport default new web3.eth.Contract(abi, address);\n","import { useEffect, useState } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport web3 from \"./web3\";\nimport lottery from \"./lottery\";\n\nfunction App() {\n  const [manager, setManager] = useState(\"\");\n  const [players, setPlayers] = useState([]);\n  const [balance, setBalance] = useState(\"0\");\n  const [toBeDeposited, setToBeDeposited] = useState(\"0\");\n  const [account, setAccount] = useState(\"\");\n  const getData = async () => {\n    const manager = await lottery.methods.manager().call();\n    setManager(manager);\n\n    const players = await lottery.methods.getPlayers().call();\n    setPlayers(players);\n    const balance = await web3.eth.getBalance(lottery.options.address);\n    setBalance(balance);\n    const account = (await web3.eth.getAccounts())[0];\n    setAccount(account);\n  };\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const deposit = async () => {\n    await lottery.methods.enter().send({\n      from: account,\n      value: web3.utils.toWei(toBeDeposited, \"ether\"),\n    });\n    alert(\"deposited\");\n    getData();\n  };\n\n  const pickWinner = async () => {\n    await lottery.methods.pickWinner().send({\n      from: account,\n    });\n    getData();\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <p>constract manager: {manager}</p>\n        <p>playsers # {players.length}</p>\n        <p>compete to win {web3.utils.fromWei(balance, \"ether\")}</p>\n        <h5>deposit to win</h5>\n        <input\n          placeholder=\"amount in ether(minimum 0.01)\"\n          value={toBeDeposited}\n          onChange={(event) => setToBeDeposited(event.target.value)}\n        />\n        <button onClick={deposit}>deposit</button>\n        {account === manager && (\n          <button onClick={pickWinner}>pickWinner</button>\n        )}\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}